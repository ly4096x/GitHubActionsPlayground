name: 'build and push docker image'
on:
  push:
    branches:
      - 'main'
  schedule:
    - cron:  '3/5 * * * *'

# check if base image updated
# check if package updated [ apk update ; apk -u list ] not empty

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      package_repo: ghcr.io/${{ github.repository_owner }}/github_actions_demo
    steps:
      - id: get-time
        run: |
          echo "::set-output name=build-time::$(date -u +'%Y%m%d_%H%M%S')"
          echo Timestamp: ${{ steps.get-time.outputs.build-time }}

      - name: Checkout Repo
        uses: actions/checkout@v2

      - id: check-if-base-image-updated
        #if: ${{ github.event_name == 'schedule' }}
        name: check-if-base-image-updated
        uses: ./.github/actions/check-if-base-image-updated
        with:
          package-tag: ${{ env.package_repo }}:latest

      - run: |
          echo steps.check-if-base-image-updated.outputs.result = ${{ steps.check-if-base-image-updated.outputs.result }}

      - if: ${{ steps.check-if-base-image-updated.outputs.result != '0' }}
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.check-if-base-image-updated.outputs.result != '0' }}
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - if: ${{ steps.check-if-base-image-updated.outputs.result != '0' }}
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - if: ${{ steps.check-if-base-image-updated.outputs.result != '0' }}
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.package_repo }}:latest
            ${{ env.package_repo }}:${{ steps.get-time.outputs.build-time }}